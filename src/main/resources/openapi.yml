openapi: 3.0.1
info:
  title: E-Commerce API
  version: 0.1.0
paths:
  /api/points:
    get:
      tags:
        - Point API
      summary: 포인트 조회
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointResponseDto'
              example:
                userId: 1
                balance: 10000

  /api/points/charge:
    post:
      tags:
        - Point API
      summary: 포인트 충전 (최소 충전 금액 1,000원)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointAddRequestDto'
            example:
              userId: 1
              amount: 10000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointResponseDto'
              example:
                userId: 1
                balance: 20000
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
              example:
                message: '충전 금액은 최소 1,000원 이상이며, 1,000원 단위여야 합니다.'


  /api/points/deduct:
    post:
      tags:
        - Point API
      summary: 포인트 이용
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PointAddRequestDto'
            example:
              userId: 1
              amount: 10000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PointResponseDto'
              example:
                userId: 1
                balance: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
              examples:
                invalidAmount:
                  summary: 포인트 차감 금액이 음수
                  value:
                    message: '포인트 차감 금액은 0보다 커야 합니다.'
                insufficientBalance:
                  summary: 포인트 잔액 부족
                  value:
                    message: '포인트 잔액이 부족하여 포인트를 차감할 수 없습니다.'

  /api/products:
    get:
      tags:
        - Product API
      summary: 상품 목록 조회
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponseDto'
              example:
                - productId: 1
                  name: T-shirt
                  price: 19900
                  stockQuantity: 100
                - productId: 2
                  name: Jeans
                  price: 49900
                  stockQuantity: 50

  /api/products/top-selling:
    get:
      tags:
        - Product API
      summary: 최근 3일 간 가장 많이 팔린 상품 목록 조회
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductResponseDto'
              example:
                - productId: 1
                  name: T-shirt
                  price: 19900
                  stockQuantity: 80
                - productId: 2
                  name: Jeans
                  price: 49900
                  stockQuantity: 30
  /api/coupons:
    get:
      tags:
        - Coupon API
      summary: 사용 가능한 쿠폰 조회
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CouponResponseDto'
              example:
                - couponId: 1
                  code: COUPON_2023
                  startDate: '2023-01-01T00:00:00'
                  endDate: '2023-12-31T23:59:59'
                - couponId: 2
                  code: SPRING_SALE
                  startDate: '2023-03-01T00:00:00'
                  endDate: '2023-05-31T23:59:59'

  /api/coupons/issue:
    post:
      tags:
        - Coupon API
      summary: 쿠폰 발급
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CouponIssueRequestDto'
            example:
              couponId: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CouponResponseDto'
              example:
                couponId: 1
                code: COUPON2023
                startDate: '2023-01-01T00:00:00'
                endDate: '2023-12-31T23:59:59'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
              example:
                message: '쿠폰이 모두 소진되어 발급 받을 수 없습니다.'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
              example:
                message: '해당 쿠폰을 찾을 수 없습니다.'

  /api/orders:
    post:
      tags:
        - Order API
      summary: 주문 요청
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderRequestDto'
            example:
              - productId: 1
                quantity: 2
              - productId: 2
                quantity: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseDto'
              example:
                orderId: 123
                orderStatus: PAYMENT_PENDING
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
              example:
                message: '상품 재고가 부족합니다.'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
              example:
                message: '주문하려는 상품을 찾을 수 없습니다.'

  /api/payments:
    post:
      tags:
        - Payment API
      summary: 주문 건에 대해 결제 요청
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequestDto'
            example:
              orderId: 123
              paymentMethod: POINT_PAYMENT
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentResponseDto'
              example:
                orderId: 123
                paymentId: 456
                totalPrice: 20000
                paymentMethod: POINT_PAYMENT
                paymentStatus: COMPLETED
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
              examples:
                invalidPaymentMethod:
                  summary: 지원하지 않는 결제 방식
                  value:
                    message: '유효하지 않은 결제 방법입니다.'
                insufficientStockQuantity:
                  summary: 상품 재고 부족
                  value:
                    message: '상품 재고가 부족합니다.'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
              example:
                message: '해당 주문을 찾을 수 없습니다.'

components:
  schemas:
    PointAddRequestDto:
      type: object
      properties:
        userId:
          type: integer
          example: 1
        amount:
          type: integer
          example: 10000

    PointResponseDto:
      type: object
      properties:
        userId:
          type: integer
          example: 1
        balance:
          type: integer
          example: 10000

    ProblemDetail:
      type: object
      properties:
        message:
          type: string

    ProductResponseDto:
      type: object
      properties:
        productId:
          type: integer
          example: 1
        name:
          type: string
          example: T-shirt
        price:
          type: integer
          example: 19900
        stockQuantity:
          type: integer
          example: 100

    CouponResponseDto:
      type: object
      properties:
        couponId:
          type: integer
          example: 1
        code:
          type: string
          example: COUPON2023
        startDate:
          type: string
          format: date-time
          example: '2023-01-01T00:00:00'
        endDate:
          type: string
          format: date-time
          example: '2023-12-31T23:59:59'

    CouponIssueRequestDto:
      type: object
      properties:
        couponId:
          type: integer
          example: 1

    OrderRequestDto:
      type: object
      properties:
        productId:
          type: integer
          example: 1
        quantity:
          type: integer
          example: 2

    OrderResponseDto:
      type: object
      properties:
        orderId:
          type: integer
          example: 123
        orderStatus:
          type: string
          example: PAYMENT_PENDING

    PaymentRequestDto:
      type: object
      properties:
        orderId:
          type: integer
          example: 123
        paymentMethod:
          type: string
          enum:
            - POINT_PAYMENT
          example: POINT_PAYMENT

    PaymentResponseDto:
      type: object
      properties:
        orderId:
          type: integer
          example: 123
        paymentId:
          type: integer
          example: 456
        totalPrice:
          type: integer
          example: 20000
        paymentMethod:
          type: string
          example: POINT_PAYMENT
        paymentStatus:
          type: string
          example: COMPLETED