openapi: 3.0.1
info:
  title: E-Commerce API
  version: "0.1.0"

paths:
  /api/goods:
    get:
      tags:
        - 상품 API
      summary: "상품 목록 조회"
      description: "각 상품 별 상품 정보 (ID, 이름, 가격, 잔여수량 등) 을 조회합니다."
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/GoodsResponseDto"
              example:
                    [
                      {
                        "id": 1,
                        "name": "T-shirt",
                        "price": 19900,
                        "quantity": 100,
                        "colors": ["Red", "Blue", "Green"],
                        "sizes": ["S", "M", "L"]
                      },
                      {
                        "id": 2,
                        "name": "Jeans",
                        "price": 49900,
                        "quantity": 50,
                        "colors": ["Black", "Blue"],
                        "sizes": ["M", "L", "XL"]
                      }
                    ]
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              example:
                    {
                      "message": "Internal server error."
                    }

  /api/goods/best-sellers:
    get:
      tags:
        - 상품 API
      summary: "베스트셀러 상품 목록 조회"
      description: "최근 3일 동안 가장 많이 팔린 상품 목록을 조회합니다."
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/BestSellerGoodsResponseDto"
              example:
                    [
                      {
                        "id": 1,
                        "name": "T-shirt",
                        "sales": 150,
                        "price": 19900,
                        "mostSoldColor": "Red",
                        "mostSoldSize": "M"
                      },
                      {
                        "id": 2,
                        "name": "Jeans",
                        "sales": 95,
                        "price": 49900,
                        "mostSoldColor": "Black",
                        "mostSoldSize": "L"
                      }
                    ]
        "500":
          description: "Internal server error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ProblemDetail"
              example:
                    {
                      "message": "Internal server error."
                    }

components:
  schemas:
    GoodsResponseDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "T-shirt"
        price:
          type: integer
          example: 19900
        quantity:
          type: integer
          example: 100
        colors:
          type: array
          items:
            type: string
          example: ["Red", "Blue", "Green"]
        sizes:
          type: array
          items:
            type: string
          example: ["S", "M", "L"]

    BestSellerGoodsResponseDto:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "T-shirt"
        sales:
          type: integer
          example: 150
        price:
          type: integer
          example: 19900
        mostSoldColor:
          type: string
          example: "Red"
        mostSoldSize:
          type: string
          example: "M"

    ProblemDetail:
      type: object
      properties:
        message:
          type: string
          example: "Internal server error."